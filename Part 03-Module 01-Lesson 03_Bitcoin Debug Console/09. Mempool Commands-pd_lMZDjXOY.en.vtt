WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.019
The debug console can help us learn the status of any transaction that has

00:00:04.019 --> 00:00:08.654
been performed and can also provide insight into the size of the mempool.

00:00:08.654 --> 00:00:11.879
In this video, we'll utilize the debug console to

00:00:11.880 --> 00:00:15.360
explore the current state of transactions within the mempool.

00:00:15.359 --> 00:00:18.140
We'll cover three commands related to the mempool.

00:00:18.140 --> 00:00:22.995
getmempoolinfo, getrawmempool, and getmempool entry.

00:00:22.995 --> 00:00:24.630
These commands help you

00:00:24.629 --> 00:00:27.864
access transactions that haven't been added to the blockchain yet.

00:00:27.864 --> 00:00:31.084
First, let's look at getmempoolinfo.

00:00:31.085 --> 00:00:36.719
getmempoolinfo returns details on the active state of transactions in the memory pool.

00:00:36.719 --> 00:00:40.390
This is a quick way to see some basic mempool information.

00:00:40.390 --> 00:00:43.695
Using help, you can see it return to things like size,

00:00:43.695 --> 00:00:46.520
bytes, usage, and other information.

00:00:46.520 --> 00:00:49.260
Let's run the command to see what we get.

00:00:49.259 --> 00:00:50.829
Here we can see there are currently

00:00:50.829 --> 00:00:54.795
this many transactions in the mempool taking up this much space.

00:00:54.795 --> 00:00:57.969
If your node hasn't been fully synchronized yet you

00:00:57.969 --> 00:01:00.670
won't see any of the information for transactions pending in

00:01:00.670 --> 00:01:03.850
the mempool that's because you're wallet downloads

00:01:03.850 --> 00:01:07.655
the existing transaction history before moving on to the mempool.

00:01:07.655 --> 00:01:09.739
So, if you don't see anything when running

00:01:09.739 --> 00:01:13.549
these commands it might be because your wallet is still synchronizing.

00:01:13.549 --> 00:01:16.099
In this case, just wait a bit longer and try

00:01:16.099 --> 00:01:19.079
this command out once the blockchain is fully synced.

00:01:19.079 --> 00:01:22.704
Next, let's try a new command, getrawmempool,

00:01:22.704 --> 00:01:27.634
getrawmempool returns a list of all transaction IDs in the memory pool.

00:01:27.635 --> 00:01:29.240
Using the help function,

00:01:29.239 --> 00:01:32.359
we can see the output will return the transaction ID,

00:01:32.359 --> 00:01:35.935
size, fee, and other important mempool data.

00:01:35.935 --> 00:01:40.115
Now, try running this command yourself by typing getrawmempool.

00:01:40.114 --> 00:01:42.189
If it doesn't show up in your console,

00:01:42.189 --> 00:01:45.024
it could again be that you're not fully synced to the blockchain.

00:01:45.025 --> 00:01:48.594
Just wait a bit longer and come back once the mempool is synced.

00:01:48.594 --> 00:01:52.099
What you'll see is a long list of transaction IDs.

00:01:52.099 --> 00:01:56.280
You can check out the details of these transactions using a few other commands.

00:01:56.280 --> 00:02:01.269
One way to explore these transactions even further is by using getmempoolentry.

00:02:01.269 --> 00:02:05.140
This command returns mempool data for a given transaction.

00:02:05.140 --> 00:02:07.510
Using help you can see that you'll need to

00:02:07.510 --> 00:02:10.420
provide it with a transaction ID from the mempool.

00:02:10.419 --> 00:02:13.509
You can use one of the transaction IDs that we just saw

00:02:13.509 --> 00:02:16.629
when we ran getrawmempool. So, let's try it.

00:02:16.629 --> 00:02:21.324
Type getmempoolentry then paste one of the IDs in after this command.

00:02:21.324 --> 00:02:23.409
You might notice that this actually returns

00:02:23.409 --> 00:02:26.770
an error saying the transaction is not in the mempool.

00:02:26.770 --> 00:02:29.770
This is one time where it's helpful to really understand

00:02:29.770 --> 00:02:32.575
the concepts to better understand what's going on here.

00:02:32.574 --> 00:02:35.739
If you remember, the mempool is just the waiting place for

00:02:35.740 --> 00:02:39.045
transactions before they get accepted into the blockchain.

00:02:39.044 --> 00:02:43.539
What that means is that the transaction ID you just saw a minute ago might have been

00:02:43.539 --> 00:02:49.049
accepted into the blockchain in the time it took you to run getrawmempool with it's ID.

00:02:49.050 --> 00:02:51.910
In that case, you're getting an error because you're looking

00:02:51.909 --> 00:02:54.629
for a transaction that's not in the mempool anymore.

00:02:54.629 --> 00:02:58.990
To get around this run getrawmempool and try to quickly inspect

00:02:58.990 --> 00:03:04.105
this transaction with getmempoolentry before it gets accepted into a block.

00:03:04.104 --> 00:03:08.324
So, that wraps up some basic commands for getting started with the mempool.

00:03:08.324 --> 00:03:14.774
To recap, we just went over getmempoolinfo, getrawmempool and getmempoolentry.

00:03:14.775 --> 00:03:17.935
If you need to, wait a bit longer for you're wallet to sink

00:03:17.935 --> 00:03:21.330
then try exploring the mempool for yourself once it's ready.

