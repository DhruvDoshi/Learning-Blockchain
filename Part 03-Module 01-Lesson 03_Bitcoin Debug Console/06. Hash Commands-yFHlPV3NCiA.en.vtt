WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.500
Hash values underlie the entire structure of the blockchain.

00:00:03.500 --> 00:00:06.150
In this video, we'll cover three commands you can

00:00:06.150 --> 00:00:09.290
use to explore hash values using the debug console.

00:00:09.289 --> 00:00:15.105
We'll cover getblockhash, getnetworkhash per second and getbestblockhash.

00:00:15.105 --> 00:00:18.240
Having access to these hash values will allow you to run

00:00:18.239 --> 00:00:22.570
more complicated commands later on to inspect the details of the blockchain.

00:00:22.570 --> 00:00:25.589
First, we'll cover getblockhash.

00:00:25.589 --> 00:00:30.714
Getblockhash returns the hash of a block at the block number you provide.

00:00:30.714 --> 00:00:34.189
Accessing this hash value will allow you to further inspect

00:00:34.189 --> 00:00:38.144
these blocks with a few commands we'll be reviewing throughout the lesson.

00:00:38.145 --> 00:00:39.935
Using the help command,

00:00:39.935 --> 00:00:42.150
you can see that you'll need to provide the height,

00:00:42.149 --> 00:00:44.989
also known as the block number, for a block.

00:00:44.990 --> 00:00:46.880
There's not much more to this one,

00:00:46.880 --> 00:00:48.335
so let's try it.

00:00:48.335 --> 00:00:52.009
I'll type, getblockhash followed by the block I want.

00:00:52.009 --> 00:00:54.030
I'll try block 19.

00:00:54.030 --> 00:00:57.204
What we get back is the hash of this block.

00:00:57.204 --> 00:00:59.600
You can choose different blocks to get back

00:00:59.600 --> 00:01:02.635
different hash values depending on what you're looking for.

00:01:02.634 --> 00:01:04.700
This may seem simple but it's

00:01:04.700 --> 00:01:08.900
an extremely powerful way to access information throughout the blockchain.

00:01:08.900 --> 00:01:11.840
Next, let's look at getnetworkhashpsps,

00:01:11.840 --> 00:01:14.480
ps stands for per second.

00:01:14.480 --> 00:01:17.770
This command returns an estimated network hashes per

00:01:17.769 --> 00:01:21.625
second based on a specified number of recent blocks.

00:01:21.625 --> 00:01:24.640
The network is creating hash values as quickly as

00:01:24.640 --> 00:01:29.540
possible and this is broken down into hashes per second using this command.

00:01:29.540 --> 00:01:34.270
You can use this any time you might want to check the speed of the network.

00:01:34.269 --> 00:01:36.104
Using the help function,

00:01:36.105 --> 00:01:40.310
I can see that I need to provide the command followed by a number of blocks.

00:01:40.310 --> 00:01:45.715
This input will be the number of recent blocks that we want to calculate the hash for.

00:01:45.715 --> 00:01:49.460
I'll run this command checking the past 150 blocks.

00:01:49.459 --> 00:01:53.129
We can also check the last 100 blocks to see the difference.

00:01:53.129 --> 00:01:54.604
Finally, the last 50.

00:01:54.605 --> 00:01:56.680
So, we can compare between the three.

00:01:56.680 --> 00:01:59.300
Notice the difference between each of these.

00:01:59.299 --> 00:02:01.730
Using this, you can start to get a feel for when

00:02:01.730 --> 00:02:04.660
the network was operating slower or faster.

00:02:04.659 --> 00:02:07.729
Since each hash is happening at a different rate,

00:02:07.730 --> 00:02:09.890
it can't give an exact value for this,

00:02:09.889 --> 00:02:11.614
but it can return the average.

00:02:11.615 --> 00:02:16.135
That's why you're choosing a certain number of blocks to calculate the average from.

00:02:16.134 --> 00:02:21.334
Finally, getbestblockhash returns the hash of the best block.

00:02:21.335 --> 00:02:24.754
The best block is a term you might not be familiar with.

00:02:24.754 --> 00:02:27.310
What it is, is the most recent block that

00:02:27.310 --> 00:02:30.185
you've synced to your local copy of the blockchain.

00:02:30.185 --> 00:02:33.670
There may be a thousand blocks that exist in the network,

00:02:33.669 --> 00:02:37.204
but if you have currently only synced everything up to block 100,

00:02:37.205 --> 00:02:40.485
then block 100 is considered your best block.

00:02:40.485 --> 00:02:43.560
Knowing that, we can check this out using the help function.

00:02:43.560 --> 00:02:46.180
There's not too much interesting going on here.

00:02:46.180 --> 00:02:49.450
This return value is similar to getblockhash.

00:02:49.449 --> 00:02:51.049
Instead of choosing a block,

00:02:51.050 --> 00:02:54.240
it will default to giving you the hash of the most recent block.

00:02:54.240 --> 00:02:57.060
Now, run getbestblockhash.

00:02:57.060 --> 00:03:01.810
What we now see is the value of the most recent block that is synced to our blockchain.

00:03:01.810 --> 00:03:03.585
That's all there is to it.

00:03:03.585 --> 00:03:06.700
That wraps up our overview of some of the commands you can

00:03:06.699 --> 00:03:10.014
use to explore hash values using the debug console.

00:03:10.014 --> 00:03:13.239
To recap, we covered three commands you can use.

00:03:13.240 --> 00:03:15.610
These commands were getblockhash,

00:03:15.610 --> 00:03:19.290
getnetworkhash per second and getbestblockhash.

00:03:19.289 --> 00:03:22.239
Try practicing these commands for yourself to help get more

00:03:22.240 --> 00:03:25.530
familiar with how hash values are represented on the blockchain.

